<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="game-container">
        <h1>Tic-Tac-Toe</h1>
        <div class="game-status" id="gameStatus">Player X's turn</div>
        <div class="game-board" id="gameBoard">
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
        </div>
        <button id="restartButton" class="restart-button">Restart Game</button>
    </div>

    <script src="script.js"></script>
</body>
</html>


* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f4f4f4;
    font-family: 'Arial', sans-serif;
}

.game-container {
    text-align: center;
}

h1 {
    font-size: 2.5rem;
    margin-bottom: 20px;
}

.game-status {
    font-size: 1.5rem;
    margin-bottom: 20px;
}

.game-board {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-template-rows: repeat(3, 100px);
    gap: 5px;
    margin-bottom: 20px;
}

.cell {
    background-color: #fff;
    border: 2px solid #333;
    font-size: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    user-select: none;
}

.cell.x {
    color: #007bff;
}

.cell.o {
    color: #ff5733;
}

.restart-button {
    padding: 10px 20px;
    font-size: 1rem;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.restart-button:hover {
    background-color: #0056b3;
}
const cells = document.querySelectorAll('[data-cell]');
const gameBoard = document.getElementById('gameBoard');
const gameStatus = document.getElementById('gameStatus');
const restartButton = document.getElementById('restartButton');

let isXTurn = true;
let gameActive = true;
const xClass = 'x';
const oClass = 'o';

const winningCombinations = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
];

function handleClick(e) {
    const cell = e.target;
    const currentClass = isXTurn ? xClass : oClass;
    placeMark(cell, currentClass);
    if (checkWin(currentClass)) {
        endGame(false);
    } else if (isDraw()) {
        endGame(true);
    } else {
        swapTurns();
        updateGameStatus();
    }
}

function placeMark(cell, currentClass) {
    cell.classList.add(currentClass);
}

function swapTurns() {
    isXTurn = !isXTurn;
}

function updateGameStatus() {
    gameStatus.textContent = isXTurn ? "Player X's turn" : "Player O's turn";
}

function checkWin(currentClass) {
    return winningCombinations.some(combination => {
        return combination.every(index => {
            return cells[index].classList.contains(currentClass);
        });
    });
}

function isDraw() {
    return [...cells].every(cell => {
        return cell.classList.contains(xClass) || cell.classList.contains(oClass);
    });
}

function endGame(draw) {
    if (draw) {
        gameStatus.textContent = "It's a draw!";
    } else {
        gameStatus.textContent = isXTurn ? "Player X wins!" : "Player O wins!";
    }
    gameActive = false;
    cells.forEach(cell => cell.removeEventListener('click', handleClick));
}

function restartGame() {
    isXTurn = true;
    gameActive = true;
    gameStatus.textContent = "Player X's turn";
    cells.forEach(cell => {
        cell.classList.remove(xClass);
        cell.classList.remove(oClass);
        cell.addEventListener('click', handleClick, { once: true });
    });
}

cells.forEach(cell => {
    cell.addEventListener('click', handleClick, { once: true });
});

restartButton.addEventListener('click', restartGame);
